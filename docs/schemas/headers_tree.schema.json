{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://fluidrag.app/schemas/headers_tree.schema.json",
  "title": "HeadersTree",
  "type": "object",
  "additionalProperties": false,
  "required": ["doc_id", "generated_at", "nodes"],
  "properties": {
    "doc_id": {
      "type": "string",
      "description": "Document identifier associated with the parse."
    },
    "generated_at": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when the headers tree was produced."
    },
    "source_sha256": {
      "type": "string",
      "pattern": "^[0-9a-f]{64}$",
      "description": "Checksum of the source document used for parsing."
    },
    "tuning_profile": {
      "type": ["string", "null"],
      "description": "Name of the tuned configuration applied, if any."
    },
    "nodes": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "parent_id",
          "level",
          "text_raw",
          "text_norm",
          "page_range",
          "scores",
          "decision",
          "stitch"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^header:[0-9A-Za-z-_:]+$",
            "description": "Stable identifier for the header node."
          },
          "parent_id": {
            "type": ["string", "null"],
            "description": "Identifier of the parent header or null for root nodes."
          },
          "level": {
            "type": "integer",
            "minimum": 1,
            "description": "Hierarchy level where 1 is top-level."
          },
          "text_raw": {
            "type": "string",
            "description": "Original header text as extracted, with styling preserved where possible."
          },
          "text_norm": {
            "type": "string",
            "description": "Lower-cased and normalized header text."
          },
          "page_range": {
            "type": "object",
            "required": ["start", "end"],
            "additionalProperties": false,
            "properties": {
              "start": {"type": "integer", "minimum": 1},
              "end": {"type": "integer", "minimum": 1}
            }
          },
          "spans": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": ["page", "bbox", "uf_chunk_id"],
              "properties": {
                "page": {"type": "integer", "minimum": 1},
                "bbox": {
                  "type": "array",
                  "items": {"type": "number"},
                  "minItems": 4,
                  "maxItems": 4
                },
                "uf_chunk_id": {"type": "string"},
                "token_start": {"type": "integer", "minimum": 0},
                "token_end": {"type": "integer", "minimum": 0}
              }
            }
          },
          "scores": {
            "type": "object",
            "additionalProperties": false,
            "required": ["regex", "style", "entropy", "graph", "fluid", "llm_vote", "total"],
            "properties": {
              "regex": {"type": "number", "minimum": 0.0, "maximum": 2.0},
              "style": {"type": "number", "minimum": 0.0, "maximum": 2.0},
              "entropy": {"type": "number", "minimum": 0.0, "maximum": 2.0},
              "graph": {"type": "number", "minimum": 0.0, "maximum": 2.0},
              "fluid": {"type": "number", "minimum": 0.0, "maximum": 2.0},
              "llm_vote": {"type": "number", "minimum": 0.0, "maximum": 2.0},
              "total": {"type": "number", "minimum": 0.0}
            }
          },
          "decision": {
            "type": "string",
            "enum": [
              "promote.header",
              "promote.subheader",
              "reject",
              "stitch.joined"
            ]
          },
          "stitch": {
            "type": "object",
            "required": ["joined"],
            "additionalProperties": false,
            "properties": {
              "joined": {"type": "boolean"},
              "source_ids": {
                "type": "array",
                "items": {"type": "string"}
              }
            }
          },
          "sequence_repair": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "repaired": {"type": "boolean"},
              "schema": {"type": "string", "enum": ["numeric", "appendix", "letter_numeric"]},
              "confidence": {"type": "number", "minimum": 0.0, "maximum": 1.0}
            }
          }
        }
      }
    },
    "artifacts": {
      "type": "object",
      "additionalProperties": false,
      "required": ["gaps_path", "audit_html", "audit_md", "results_junit"],
      "properties": {
        "gaps_path": {"type": "string"},
        "audit_html": {"type": "string"},
        "audit_md": {"type": "string"},
        "results_junit": {"type": "string"}
      }
    }
  }
}
